import { NextRequest, NextResponse } from 'next/server'
import { prisma } from '@/lib/db'
import { getMonth, getYear } from 'date-fns'

export async function POST(request: NextRequest) {
  try {
    // Ë™çË®º„ÉÅ„Çß„ÉÉ„ÇØ
    const authHeader = request.headers.get('authorization')
    const token = authHeader?.replace('Bearer ', '')
    
    if (token !== process.env.CRON_SECRET) {
      return NextResponse.json(
        { status: 'error', message: 'Unauthorized' },
        { status: 401 }
      )
    }

    const now = new Date()
    const month = getMonth(now) + 1 // getMonth()„ÅØ0„Éô„Éº„Çπ„Å™„ÅÆ„Åß+1
    const year = getYear(now)

    // ÊúàÈñì„Éà„É¨„É≥„Éâ„Éá„Éº„Çø„ÇíÂèñÂæó
    const trends = await prisma.trendData.findMany({
      where: {
        monthNumber: month,
        year: year,
      },
      orderBy: {
        views: 'desc'
      },
      take: 20
    })

    // „É¢„ÉÉ„ÇØÊúàÈñìË®ò‰∫ãÁîüÊàê
    const mockArticle = {
      title: `${year}Âπ¥${month}Êúà YouTube & TikTok ÊúàÈñì„Éà„É¨„É≥„ÉâÁ∑èÊã¨„É¨„Éù„Éº„Éà`,
      content: `# ${year}Âπ¥${month}Êúà ÊúàÈñì„Éà„É¨„É≥„ÉâÁ∑èÊã¨„É¨„Éù„Éº„Éà

## üìä ÊúàÈñì„Éè„Ç§„É©„Ç§„Éà

${year}Âπ¥${month}Êúà„ÅØ${trends.length}‰ª∂„ÅÆ„Éà„É¨„É≥„Éâ„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅåË©±È°å„Å®„Å™„Çä„Åæ„Åó„Åü„ÄÇ

### ÊúàÈñì„Éà„ÉÉ„Éó„Éà„É¨„É≥„Éâ

**1. „Ç®„É≥„Çø„Éº„ÉÜ„Ç§„É°„É≥„ÉàÂàÜÈáé„ÅÆÂúßÂÄíÁöÑ‰∫∫Ê∞ó**
${trends.filter(t => t.category === 'Entertainment').length}‰ª∂„ÅÆ„Ç®„É≥„Çø„É°„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅåÊúàÈñì„É©„É≥„Ç≠„É≥„Ç∞„ÇíÂ∏≠Â∑ª„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ

**2. Â§öÊßò„Å™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Ç∏„É£„É≥„É´„ÅÆÁ´∂‰∫â**
- Èü≥Ê•Ω: ${trends.filter(t => t.category === 'Music').length}‰ª∂
- „Ç≤„Éº„É†: ${trends.filter(t => t.category === 'Gaming').length}‰ª∂
- „Çπ„Éù„Éº„ÉÑ: ${trends.filter(t => t.category === 'Sports').length}‰ª∂
- „Ç¢„Éã„É°: ${trends.filter(t => t.category === 'Film & Animation').length}‰ª∂

### ÊúàÈñìÊ≥®ÁõÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ TOP5

${trends.slice(0, 5).map((trend, index) => `
**${index + 1}. ${trend.title}**
- „Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†: ${trend.platform}
- Ë¶ñËÅ¥Êï∞: ${Number(trend.views).toLocaleString()}Âõû
- „Ç´„ÉÜ„Ç¥„É™: ${trend.category}
- ÂèéÈõÜÊó•: ${new Date(trend.collectedAt).toLocaleDateString('ja-JP')}
`).join('')}

## üéØ „Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†Ë©≥Á¥∞ÂàÜÊûê

### YouTubeÊúàÈñìÂàÜÊûê
- Á∑èÂãïÁîªÊï∞: ${trends.filter(t => t.platform === 'YOUTUBE').length}‰ª∂
- ‰∏ªË¶Å„Ç´„ÉÜ„Ç¥„É™: „Ç®„É≥„Çø„É°„ÄÅ„Ç≤„Éº„É†„ÄÅÈü≥Ê•Ω„ÄÅ„Çπ„Éù„Éº„ÉÑ
- ÁâπÂæ¥: Èï∑ÊôÇÈñì„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Å®„Ç∑„Éß„Éº„ÉàÂãïÁîª„ÅÆ‰∏°Êñπ„Åß‰∫∫Ê∞ó

### TikTokÊúàÈñìÂàÜÊûê
- Á∑èÂãïÁîªÊï∞: ${trends.filter(t => t.platform === 'TIKTOK').length}‰ª∂
- ‰∏ªË¶Å„Ç´„ÉÜ„Ç¥„É™: „ÉÄ„É≥„Çπ„ÄÅ„Éö„ÉÉ„Éà„ÄÅÊñôÁêÜ„ÄÅ„É©„Ç§„Éï„Çπ„Çø„Ç§„É´
- ÁâπÂæ¥: „Éê„Ç§„É©„É´ÊÄß„ÅÆÈ´ò„ÅÑ„Ç∑„Éß„Éº„Éà„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åå‰∏≠ÂøÉ

## üìà ÊúàÈñì„Éà„É¨„É≥„ÉâÂÇæÂêëÂàÜÊûê

### 1. „Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆÂ§öÊßòÂåñ
‰ªäÊúà„ÅØÊßò„ÄÖ„Å™„Ç∏„É£„É≥„É´„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åå„Éê„É©„É≥„ÇπËâØ„Åè‰∫∫Ê∞ó„ÇíÈõÜ„ÇÅ„Åæ„Åó„Åü„ÄÇ

### 2. Â≠£ÁØÄÊÄß„ÅÆÂΩ±Èüø
${month}Êúà„ÅÆÂ≠£ÁØÄÁöÑÁâπÂæ¥„Åå„Ç≥„É≥„ÉÜ„É≥„ÉÑÈÅ∏Êäû„Å´ÂΩ±Èüø„Çí‰∏é„Åà„Å¶„ÅÑ„Åæ„Åô„ÄÇ

### 3. „ÇØ„É™„Ç®„Ç§„Çø„Éº„ÅÆÊàêÈï∑
Êñ∞„Åó„ÅÑ„ÇØ„É™„Ç®„Ç§„Çø„Éº„ÅÆÂè∞È†≠„Å®Êó¢Â≠ò„ÇØ„É™„Ç®„Ç§„Çø„Éº„ÅÆÂÆâÂÆö„Åó„Åü‰∫∫Ê∞ó„ÅåÂÖ±Â≠ò„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ

## üîÆ Êù•Êúà„ÅÆ‰∫àÊ∏¨

Êù•ÊúàÔºà${month === 12 ? 1 : month + 1}ÊúàÔºâ„Å´Âêë„Åë„Å¶Ôºö

1. **Á∂ôÁ∂öÁöÑ‰∫∫Ê∞ó„Ç∏„É£„É≥„É´**: „Ç®„É≥„Çø„É°„ÄÅ„Ç≤„Éº„É†„ÄÅÈü≥Ê•Ω
2. **Ê≥®ÁõÆ„Éà„Éî„ÉÉ„ÇØ**: Â≠£ÁØÄ„Ç§„Éô„É≥„ÉàÈñ¢ÈÄ£„Ç≥„É≥„ÉÜ„É≥„ÉÑ
3. **Êñ∞Ëàà„Éà„É¨„É≥„Éâ**: AI„ÄÅ„ÉÜ„ÇØ„Éé„É≠„Ç∏„ÉºÈñ¢ÈÄ£„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆÂ¢óÂä†‰∫àÊÉ≥

## „Åæ„Å®„ÇÅ

${year}Âπ¥${month}Êúà„ÅØ„ÄÅÂ§öÊßòÊÄß„Å´ÂØå„Çì„Å†„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅåÁâπÂæ¥ÁöÑ„Å™Êúà„Åß„Åó„Åü„ÄÇ„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†„ÇíÂïè„Çè„Åö„ÄÅ„ÇØ„É™„Ç®„Ç§„Çø„Éº„ÅÆÂâµÈÄ†ÊÄß„ÅåÂ≠òÂàÜ„Å´Áô∫ÊèÆ„Åï„Çå„ÅüÊúüÈñì„Å®Ë®Ä„Åà„Çã„Åß„Åó„Çá„ÅÜ„ÄÇ

---
*„Åì„ÅÆÊúàÈñì„É¨„Éù„Éº„Éà„ÅØËá™ÂãïÁîüÊàê„Åï„Çå„Åæ„Åó„Åü*`,
      summary: `${year}Âπ¥${month}Êúà„ÅÆYouTube„ÉªTikTokÊúàÈñìÁ∑èÊã¨ÂàÜÊûê„ÄÇ„Ç®„É≥„Çø„É°${trends.filter(t => t.category === 'Entertainment').length}‰ª∂„ÄÅ„Ç≤„Éº„É†${trends.filter(t => t.category === 'Gaming').length}‰ª∂„ÄÅÈü≥Ê•Ω${trends.filter(t => t.category === 'Music').length}‰ª∂„Åå‰∏ä‰Ωç„Å´„É©„É≥„ÇØ„Ç§„É≥„ÄÇ`,
      articleType: 'MONTHLY' as const,
      platforms: ['YOUTUBE', 'TIKTOK'] as const,
      status: 'PUBLISHED' as const,
      metadata: {
        month,
        year,
        trendsAnalyzed: trends.length,
        generatedAt: now.toISOString(),
        mockGeneration: true
      }
    }

    // „Éá„Éº„Çø„Éô„Éº„Çπ„Å´‰øùÂ≠ò
    const article = await prisma.aIArticle.create({
      data: mockArticle
    })

    return NextResponse.json({
      status: 'success',
      message: 'Mock monthly report generated successfully',
      data: {
        articleId: article.id,
        title: article.title,
        trendsAnalyzed: trends.length
      },
      timestamp: new Date().toISOString()
    })

  } catch (error) {
    console.error('Mock monthly report generation error:', error)
    return NextResponse.json(
      {
        status: 'error',
        message: 'Failed to generate mock monthly report',
        error: error instanceof Error ? error.message : 'Unknown error',
        timestamp: new Date().toISOString()
      },
      { status: 500 }
    )
  }
}
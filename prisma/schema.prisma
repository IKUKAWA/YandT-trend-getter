// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TrendData {
  id          String   @id @default(cuid())
  platform    Platform
  title       String
  videoId     String   @map("video_id")
  views       BigInt?
  likes       Int?
  comments    Int?
  hashtags    String[]
  category    String?
  collectedAt DateTime @default(now()) @map("collected_at")
  weekNumber  Int      @map("week_number")
  monthNumber Int      @map("month_number")
  year        Int
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@unique([videoId, platform])
  @@map("trend_data")
}

model AIArticle {
  id          String        @id @default(cuid())
  title       String
  content     String
  summary     String?
  articleType ArticleType   @map("article_type")
  platforms   Platform[]
  publishedAt DateTime?     @map("published_at")
  metadata    Json?
  status      ArticleStatus @default(DRAFT)
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")

  @@map("ai_articles")
}

model TrendAnalysis {
  id           String   @id @default(cuid())
  weekNumber   Int?     @map("week_number")
  monthNumber  Int?     @map("month_number")
  year         Int
  platform     Platform
  topCategories Json    @map("top_categories")
  growthTrends Json     @map("growth_trends")
  aiInsights   String   @map("ai_insights")
  createdAt    DateTime @default(now()) @map("created_at")

  @@map("trend_analysis")
}

model Prediction {
  id           String          @id @default(cuid())
  type         PredictionType
  platform     Platform
  data         Json
  accuracyScore Float          @map("accuracy_score")
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")

  @@map("predictions")
}

model UserPreference {
  id          String   @id @default(cuid())
  userId      String   @map("user_id")
  preferences Json
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("user_preferences")
}

model Notification {
  id        String            @id @default(cuid())
  type      NotificationType
  recipient String
  content   Json
  sentAt    DateTime?         @map("sent_at")
  createdAt DateTime          @default(now()) @map("created_at")

  @@map("notifications")
}

enum Platform {
  YOUTUBE
  TIKTOK
}

enum ArticleType {
  WEEKLY
  MONTHLY
}

enum ArticleStatus {
  DRAFT
  PUBLISHED
}

enum PredictionType {
  WEEKLY
  MONTHLY
  SEASONAL
}

enum NotificationType {
  TREND_ALERT
  REPORT_READY
  SYSTEM_UPDATE
}